version: '3.8'
services:
  db:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: metacatalog
    expose:
      - 5432
    ports:
      - 5433:5432
    volumes:
      - ../../data/pg_data:/var/lib/postgresql/data

  installer:
    build:
      context: ../../
      dockerfile: Dockerfile
    links:
      - db
    depends_on: 
      - db 
    environment:
      METACATALOG_URI: postgresql://postgres:postgres@db:5432/metacatalog
      DATA_FILE_PATH: /data/raster
      START_YEAR: 2005
      END_YEAR: 2015
    command: ["python", "/src/pg_init/init.py"]
    volumes:
      - ../../data/raster:/data/raster
      - ../../examples/hyras/init:/tool_init
    
  loader:
    build:
      context: ../../
      dockerfile: Dockerfile
    links:
      - db
    environment:
      METACATALOG_URI: postgresql://postgres:postgres@db:5432/metacatalog
    command: ["echo", "run the tool like 'docker compose run --rm loader python run.py'"]
    volumes:
      - ../../in:/in
      - ../../out:/out
      - ../../data/raster:/data/raster

# RIGHT NOW I CAN'T THINK OF A BETTER WAY TO DO THIS.
# IDEALLY, WE SHOULD HAVE tool_runner WORKING, WHICH BUILDS THE loader and handles the
# MOUNTS itself. ALTERNATIVELY, WE WOULD NEED A WAY HOW WE CAN INVOKE THE default loader
# BUT OVERWRITE THE MOUNTS. I DON'T KNOW HOW TO DO THAT.
# THUS I create a new service for each of the examples
  DE210080_loader:
    build:
      context: ../../
      dockerfile: Dockerfile
    links:
      - db
    environment:
      METACATALOG_URI: postgresql://postgres:postgres@db:5432/metacatalog
    command: ["echo", "run the tool like 'docker compose run --rm loader python run.py'"]
    volumes:
      - ./DE210080/in:/in
      - ./DE210080/out:/out
      - ../../data/raster:/data/raster

  DE410890_loader:
    build:
      context: ../../
      dockerfile: Dockerfile
    links:
      - db
    environment:
      METACATALOG_URI: postgresql://postgres:postgres@db:5432/metacatalog
    command: ["echo", "run the tool like 'docker compose run --rm loader python run.py'"]
    volumes:
      - ./DE410890/in:/in
      - ./DE410890/out:/out
      - ../../data/raster:/data/raster

  DE910180_loader:
    build:
      context: ../../
      dockerfile: Dockerfile
    links:
      - db
    environment:
      METACATALOG_URI: postgresql://postgres:postgres@db:5432/metacatalog
    command: ["echo", "run the tool like 'docker compose run --rm loader python run.py'"]
    volumes:
      - ./DE910180/in:/in
      - ./DE910180/out:/out
      - ../../data/raster:/data/raster
